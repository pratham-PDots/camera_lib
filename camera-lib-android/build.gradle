buildscript {
    dependencies {
        classpath 'com.google.gms:google-services:4.4.0'
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    namespace 'com.sj.camera_lib_android'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField("String", "FIREBASE_APP_KEY", "\"${firebaseAppKey}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
}

dependencies {
    implementation  'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Livedata
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"


    //camera
    def camerax_version = "1.2.2"
    implementation "androidx.camera:camera-core:1.3.0-rc02"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    //gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // Image Cropping
    implementation 'com.vanniktech:android-image-cropper:4.3.3'

    // bugfender for Logs
    implementation 'com.bugfender.sdk:android:3.+'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'

    //Firebase
    implementation 'com.google.firebase:firebase-common-ktx:20.3.3'
    implementation 'com.google.firebase:firebase-storage-ktx:20.2.1'

    implementation "androidx.room:room-runtime:2.4.0"
    kapt "androidx.room:room-compiler:2.4.0"



    //openCV
//    implementation 'org.opencv:opencv-android:4.5.1'
}

//--- Maven Local publish script (We only need this for local publish, to test the library) ---//
afterEvaluate{
    android.libraryVariants.each{variant->
        publishing.publications.create(variant.name,MavenPublication){
            from components.findByName(variant.name)

            groupId='com.github.sj0510'
            artifactId="camera-lib-android"
            version='1.000'
        } // com.github.sj0510:camera-lib-android:1.0.0

    }
}

/*
publishing {
    publications {
        maven(MavenPublication) {
            groupId='com.github.sj0510'
            artifactId="camera-lib-android"
            version='1.0.2'

            pom {
                description = 'A description of my library'
            }
        }
    }
}
*/
